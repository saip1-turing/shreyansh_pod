{
   "env":"hr_payroll",
   "model_provider":"openai",
   "model":"o4-mini",
   "num_trials":3,
   "temperature":1,
   "interface_num":2,
   "task":{
      "user_id":"376076fe-25ec-4185-9c8e-63ff4386a9e1",
      "instruction":"You are Grace Carlson, from payroll team. For worker Kathryn Cooper (email: padillarandy@example.net) in organization deacb95a-ac0d-4f69-a8dd-10b4575aae7b, a payroll payment was blocked due to missing compliance. First, you want to fetch all active contracts for this user in the organization with currency 'NOK'. Next, you want to list all payments for the worker with status 'failed' with minimum amount 4000 AUD. Next, for each failed payment, fetch all documents for the contract. Next, you want to update the status of all documents to 'reviewed' and what to recheck if document status is updated properly. Next, you want to re-initiate the payment for the failed amount. Once the payment is done, you want to set a end_date on 2026-12-31. You are reactive to the agent and will not say anything that is not asked.",
      "actions":[
         {
            "name":"find_user",
            "arguments":{
               "email":"padillarandy@example.net"
            }
         },
         {
            "name":"get_contracts",
            "arguments":{
               "user_id":"d4e534bd-5e85-4f68-a2f1-03ea2157a8e8",
               "organization_id":"deacb95a-ac0d-4f69-a8dd-10b4575aae7b",
               "status":"active",
               "currency" : "NOK"
            }
         },
         {
            "name":"get_payments",
            "arguments":{
               "user_id":"d4e534bd-5e85-4f68-a2f1-03ea2157a8e8",
               "status":"failed",
               "currency" : "AUD",
               "min_amount" : 4000.0
            }
         },
         {
            "name":"get_documents",
            "arguments":{
               "user_id":"d4e534bd-5e85-4f68-a2f1-03ea2157a8e8",
               "worker_id":"1f10e52c-22db-4608-93d4-20ccf73fa096"
            }
         },
         {
            "name":"update_document_status",
            "arguments":{
               "document_id":"70e7f9ff-4170-48da-b3e4-951280b8da46",
               "new_status":"reviewed"
            }
         },
         {
            "name":"get_documents",
            "arguments":{
               "document_id" : "70e7f9ff-4170-48da-b3e4-951280b8da46"
            }
         },
         {
            "name":"create_payment",
            "arguments":{
               "user_id":"d4e534bd-5e85-4f68-a2f1-03ea2157a8e8",
               "invoice_id":"bd02abf4-40d1-4fba-b2c2-3a3bd663be7f",
               "amount": 4272.52,
               "currency":"AUD"
            }
         },
         {
            "name":"extend_contract_period",
            "arguments":{
               "contract_id":"0bfc1cc7-96c1-40c6-b9d1-1e360cc4169e",
               "new_end_date":"2026-12-31"
            }
         }
      ],
      "outputs":[
         "0bfc1cc7-96c1-40c6-b9d1-1e360cc4169e",
         "4272.52",
         "reviewed",
         "payment_id"
      ],
      "edges":[
         {
            "from":"instruction",
            "to":"find_user",
            "connection":{
               "input":"email",
               "output":"email"
            }
         },
         {
            "from":"find_user",
            "to":"get_contracts",
            "connection":{
               "input":"user_id",
               "output":"user_id"
            }
         },
         {
            "from":"instruction",
            "to":"get_contracts",
            "connection":{
               "input":"organization_id, status, currency",
               "output":"organization_id, status, currency"
            }
         },
         {
            "from":"get_contracts",
            "to":"get_payments",
            "connection":{
               "input":"user_id",
               "output":"user_id"
            }
         },
         {
            "from":"instruction",
            "to":"get_payments",
            "connection":{
               "input":"status, min_amount",
               "output":"status, min_amount"
            }
         },
         {
            "from":"get_contracts",
            "to":"get_documents",
            "connection":{
               "input":"worker_id, user_id",
               "output":"worker_id, user_id"
            }
         },
         {
            "from":"get_documents",
            "to":"update_document_status",
            "connection":{
               "input":"document_id",
               "output":"document_id"
            }
         },
         {
            "from":"instruction",
            "to":"update_document_status",
            "connection":{
               "input":"new_status",
               "output":"new_status"
            }
         },
         {
            "from":"update_document_status",
            "to":"get_documents",
            "connection":{
               "input":"document_id",
               "output":"document_id"
            }
         },
         {
            "from":"get_documents",
            "to":"create_payment",
            "connection":{
               "input":"user_id",
               "output":"user_id"
            }
         },
         {
            "from":"get_payments",
            "to":"create_payment",
            "connection":{
               "input":"invoice_id, amount, currency",
               "output":"invoice_id, amount, currency"
            }
         },
         {
            "from":"get_contracts",
            "to":"extend_contract_period",
            "connection":{
               "input":"contract_id",
               "output":"contract_id"
            }
         },
         {
            "from":"instruction",
            "to":"extend_contract_period",
            "connection":{
               "input":"new_end_date",
               "output":"new_end_date"
            }
         }
      ],
      "num_edges":13
   }
}